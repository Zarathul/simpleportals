buildscript
{
    repositories
    {
        maven { url = "http://files.minecraftforge.net/maven" }

		jcenter()
        mavenCentral()
    }
    dependencies
    {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
//apply plugin: 'maven-publish'

String ForgeVersion = '1.14.4-28.1.44'

version = "1.14.4-1.6.0.0"
group= "net.zarathul.simpleportals" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "simpleportals"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava
{
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft
{
    mappings channel: 'snapshot', version: '20190719-1.14.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
	runs
	{
		client
		{
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			
			mods
			{
				simpleportals
				{
					source sourceSets.main
				}
			}
		}

        server
		{
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			
			mods
			{
				simpleportals
				{
					source sourceSets.main
				}
			}
		}
	}
}

dependencies
{
    minecraft "net.minecraftforge:forge:$ForgeVersion"
}

jar
{
    exclude 'mcjty/**'

	manifest
	{
		attributes([
			"Specification-Title": "simpleportals",
			"Specification-Vendor": "Zarathul",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" :"Zarathul",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
